name: Build and Deploy to EKS

on:
  push:
    branches:
      - master   # ðŸ‘ˆ branch name confirmed by you

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      EKS_CLUSTER_NAME: cyetech-cluster
      ECR_REPOSITORY: cyetechnology

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        run: |
          # Create repo if doesn't exist
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY || aws ecr create-repository --repository-name $ECR_REPOSITORY
          
          # Get repo URI and tag image with :latest
          IMAGE_URI=$(aws ecr describe-repositories --repository-names $ECR_REPOSITORY --query "repositories[0].repositoryUri" --output text)
          docker build -t $IMAGE_URI:latest .
          docker push $IMAGE_URI:latest
          echo "IMAGE_URI=$IMAGE_URI:latest" >> $GITHUB_ENV

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

      - name: Deploy to EKS
        run: |
          sed -i "s|image:.*|image: $IMAGE_URI|" /home/ubuntu/ecr/k8s/deployment.yaml
          kubectl apply -f /home/ubuntu/ecr/k8s/deployment.yaml
          kubectl apply -f /home/ubuntu/ecr/k8s/service.yaml
